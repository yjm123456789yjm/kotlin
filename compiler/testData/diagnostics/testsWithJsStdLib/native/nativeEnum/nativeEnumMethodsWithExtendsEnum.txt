package

public fun main(): kotlin.Unit
public fun manipulateWithEnum(/*0*/ x: kotlin.Enum<*>): kotlin.Int

public final external enum class Foo : kotlin.Enum<Foo> {
    enum entry A

    enum entry B

    private constructor Foo()
    @kotlin.internal.IntrinsicConstEvaluation public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: Foo): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): Foo
    public final /*synthesized*/ fun values(): kotlin.Array<Foo>
}
