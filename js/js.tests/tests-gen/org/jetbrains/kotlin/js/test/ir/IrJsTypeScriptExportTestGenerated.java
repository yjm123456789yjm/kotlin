/*
 * Copyright 2010-2022 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.js.test.ir;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link GenerateNewCompilerTests.kt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("js/js.translator/testData/typescript-export")
@TestDataPath("$PROJECT_ROOT")
public class IrJsTypeScriptExportTestGenerated extends AbstractIrJsTypeScriptExportTest {
    @Test
    public void testAllFilesPresentInTypescript_export() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/abstract-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Abstract_classes {
        @Test
        @TestMetadata("abstract-classes.kt")
        public void testAbstract_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/abstract-classes/abstract-classes.kt");
        }

        @Test
        public void testAllFilesPresentInAbstract_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/abstract-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/abstract-classesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Abstract_classesInExportedFile {
        @Test
        @TestMetadata("abstract-classes.kt")
        public void testAbstract_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/abstract-classesInExportedFile/abstract-classes.kt");
        }

        @Test
        public void testAllFilesPresentInAbstract_classesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/abstract-classesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/classesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class ClassesInExportedFile {
        @Test
        public void testAllFilesPresentInClassesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/classesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("inner-class.kt")
        public void testInner_class() throws Exception {
            runTest("js/js.translator/testData/typescript-export/classesInExportedFile/inner-class.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/constructors")
    @TestDataPath("$PROJECT_ROOT")
    public class Constructors {
        @Test
        public void testAllFilesPresentInConstructors() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/constructors"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("constructors.kt")
        public void testConstructors() throws Exception {
            runTest("js/js.translator/testData/typescript-export/constructors/constructors.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/constructorsInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class ConstructorsInExportedFile {
        @Test
        public void testAllFilesPresentInConstructorsInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/constructorsInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("constructors.kt")
        public void testConstructors() throws Exception {
            runTest("js/js.translator/testData/typescript-export/constructorsInExportedFile/constructors.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/data-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Data_classes {
        @Test
        public void testAllFilesPresentInData_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/data-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("data-classes.kt")
        public void testData_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/data-classes/data-classes.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/data-classesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Data_classesInExportedFile {
        @Test
        public void testAllFilesPresentInData_classesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/data-classesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("data-classes.kt")
        public void testData_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/data-classesInExportedFile/data-classes.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/declarationsInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class DeclarationsInExportedFile {
        @Test
        public void testAllFilesPresentInDeclarationsInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/declarationsInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("declarations.kt")
        public void testDeclarations() throws Exception {
            runTest("js/js.translator/testData/typescript-export/declarationsInExportedFile/declarations.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/enum-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Enum_classes {
        @Test
        public void testAllFilesPresentInEnum_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/enum-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("enum-classes.kt")
        public void testEnum_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/enum-classes/enum-classes.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/enum-classesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Enum_classesInExportedFile {
        @Test
        public void testAllFilesPresentInEnum_classesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/enum-classesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("enum-classes.kt")
        public void testEnum_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/enum-classesInExportedFile/enum-classes.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/escapedDeclarationsInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class EscapedDeclarationsInExportedFile {
        @Test
        public void testAllFilesPresentInEscapedDeclarationsInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/escapedDeclarationsInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("escapedDeclarations.kt")
        public void testEscapedDeclarations() throws Exception {
            runTest("js/js.translator/testData/typescript-export/escapedDeclarationsInExportedFile/escapedDeclarations.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/escaped-declarations")
    @TestDataPath("$PROJECT_ROOT")
    public class Escaped_declarations {
        @Test
        public void testAllFilesPresentInEscaped_declarations() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/escaped-declarations"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("escaped-declarations.kt")
        public void testEscaped_declarations() throws Exception {
            runTest("js/js.translator/testData/typescript-export/escaped-declarations/escaped-declarations.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/escaped-declarationsInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Escaped_declarationsInExportedFile {
        @Test
        public void testAllFilesPresentInEscaped_declarationsInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/escaped-declarationsInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("escaped-declarations.kt")
        public void testEscaped_declarations() throws Exception {
            runTest("js/js.translator/testData/typescript-export/escaped-declarationsInExportedFile/escaped-declarations.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/functions")
    @TestDataPath("$PROJECT_ROOT")
    public class Functions {
        @Test
        public void testAllFilesPresentInFunctions() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/functions"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("functions.kt")
        public void testFunctions() throws Exception {
            runTest("js/js.translator/testData/typescript-export/functions/functions.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/functionsInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class FunctionsInExportedFile {
        @Test
        public void testAllFilesPresentInFunctionsInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/functionsInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("functions.kt")
        public void testFunctions() throws Exception {
            runTest("js/js.translator/testData/typescript-export/functionsInExportedFile/functions.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/implicit-export")
    @TestDataPath("$PROJECT_ROOT")
    public class Implicit_export {
        @Test
        public void testAllFilesPresentInImplicit_export() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/implicit-export"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("implicit-export.kt")
        public void testImplicit_export() throws Exception {
            runTest("js/js.translator/testData/typescript-export/implicit-export/implicit-export.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/implicit-exportInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Implicit_exportInExportedFile {
        @Test
        public void testAllFilesPresentInImplicit_exportInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/implicit-exportInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("implicit-export.kt")
        public void testImplicit_export() throws Exception {
            runTest("js/js.translator/testData/typescript-export/implicit-exportInExportedFile/implicit-export.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/inheritance")
    @TestDataPath("$PROJECT_ROOT")
    public class Inheritance {
        @Test
        public void testAllFilesPresentInInheritance() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/inheritance"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("inheritance.kt")
        public void testInheritance() throws Exception {
            runTest("js/js.translator/testData/typescript-export/inheritance/inheritance.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/inner-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Inner_classes {
        @Test
        public void testAllFilesPresentInInner_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/inner-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("inner-class.kt")
        public void testInner_class() throws Exception {
            runTest("js/js.translator/testData/typescript-export/inner-classes/inner-class.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/inner-classesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Inner_classesInExportedFile {
        @Test
        public void testAllFilesPresentInInner_classesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/inner-classesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("inner-class.kt")
        public void testInner_class() throws Exception {
            runTest("js/js.translator/testData/typescript-export/inner-classesInExportedFile/inner-class.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/interfaces")
    @TestDataPath("$PROJECT_ROOT")
    public class Interfaces {
        @Test
        public void testAllFilesPresentInInterfaces() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/interfaces"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("interfaces.kt")
        public void testInterfaces() throws Exception {
            runTest("js/js.translator/testData/typescript-export/interfaces/interfaces.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/interfacesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class InterfacesInExportedFile {
        @Test
        public void testAllFilesPresentInInterfacesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/interfacesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("interfaces.kt")
        public void testInterfaces() throws Exception {
            runTest("js/js.translator/testData/typescript-export/interfacesInExportedFile/interfaces.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/js-name")
    @TestDataPath("$PROJECT_ROOT")
    public class Js_name {
        @Test
        public void testAllFilesPresentInJs_name() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/js-name"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("js-name.kt")
        public void testJs_name() throws Exception {
            runTest("js/js.translator/testData/typescript-export/js-name/js-name.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/js-nameInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Js_nameInExportedFile {
        @Test
        public void testAllFilesPresentInJs_nameInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/js-nameInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("js-name.kt")
        public void testJs_name() throws Exception {
            runTest("js/js.translator/testData/typescript-export/js-nameInExportedFile/js-name.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/member-properties")
    @TestDataPath("$PROJECT_ROOT")
    public class Member_properties {
        @Test
        public void testAllFilesPresentInMember_properties() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/member-properties"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("member-properties.kt")
        public void testMember_properties() throws Exception {
            runTest("js/js.translator/testData/typescript-export/member-properties/member-properties.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/member-propertiesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Member_propertiesInExportedFile {
        @Test
        public void testAllFilesPresentInMember_propertiesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/member-propertiesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("member-properties.kt")
        public void testMember_properties() throws Exception {
            runTest("js/js.translator/testData/typescript-export/member-propertiesInExportedFile/member-properties.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/methods")
    @TestDataPath("$PROJECT_ROOT")
    public class Methods {
        @Test
        public void testAllFilesPresentInMethods() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/methods"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("methods.kt")
        public void testMethods() throws Exception {
            runTest("js/js.translator/testData/typescript-export/methods/methods.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/methodsInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class MethodsInExportedFile {
        @Test
        public void testAllFilesPresentInMethodsInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/methodsInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("methods.kt")
        public void testMethods() throws Exception {
            runTest("js/js.translator/testData/typescript-export/methodsInExportedFile/methods.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/moduleSystemsInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class ModuleSystemsInExportedFile {
        @Test
        public void testAllFilesPresentInModuleSystemsInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/moduleSystemsInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("commonjs.kt")
        public void testCommonjs() throws Exception {
            runTest("js/js.translator/testData/typescript-export/moduleSystemsInExportedFile/commonjs.kt");
        }

        @Test
        @TestMetadata("plain.kt")
        public void testPlain() throws Exception {
            runTest("js/js.translator/testData/typescript-export/moduleSystemsInExportedFile/plain.kt");
        }

        @Test
        @TestMetadata("umd.kt")
        public void testUmd() throws Exception {
            runTest("js/js.translator/testData/typescript-export/moduleSystemsInExportedFile/umd.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/module-systems")
    @TestDataPath("$PROJECT_ROOT")
    public class Module_systems {
        @Test
        public void testAllFilesPresentInModule_systems() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/module-systems"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("commonjs.kt")
        public void testCommonjs() throws Exception {
            runTest("js/js.translator/testData/typescript-export/module-systems/commonjs.kt");
        }

        @Test
        @TestMetadata("plain.kt")
        public void testPlain() throws Exception {
            runTest("js/js.translator/testData/typescript-export/module-systems/plain.kt");
        }

        @Test
        @TestMetadata("umd.kt")
        public void testUmd() throws Exception {
            runTest("js/js.translator/testData/typescript-export/module-systems/umd.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/module-systemsInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Module_systemsInExportedFile {
        @Test
        public void testAllFilesPresentInModule_systemsInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/module-systemsInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("commonjs.kt")
        public void testCommonjs() throws Exception {
            runTest("js/js.translator/testData/typescript-export/module-systemsInExportedFile/commonjs.kt");
        }

        @Test
        @TestMetadata("plain.kt")
        public void testPlain() throws Exception {
            runTest("js/js.translator/testData/typescript-export/module-systemsInExportedFile/plain.kt");
        }

        @Test
        @TestMetadata("umd.kt")
        public void testUmd() throws Exception {
            runTest("js/js.translator/testData/typescript-export/module-systemsInExportedFile/umd.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/namespaces")
    @TestDataPath("$PROJECT_ROOT")
    public class Namespaces {
        @Test
        public void testAllFilesPresentInNamespaces() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/namespaces"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("namespaces.kt")
        public void testNamespaces() throws Exception {
            runTest("js/js.translator/testData/typescript-export/namespaces/namespaces.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/namespacesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class NamespacesInExportedFile {
        @Test
        public void testAllFilesPresentInNamespacesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/namespacesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("namespaces.kt")
        public void testNamespaces() throws Exception {
            runTest("js/js.translator/testData/typescript-export/namespacesInExportedFile/namespaces.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/objects")
    @TestDataPath("$PROJECT_ROOT")
    public class Objects {
        @Test
        public void testAllFilesPresentInObjects() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/objects"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("objects.kt")
        public void testObjects() throws Exception {
            runTest("js/js.translator/testData/typescript-export/objects/objects.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/objectsInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class ObjectsInExportedFile {
        @Test
        public void testAllFilesPresentInObjectsInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/objectsInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("objects.kt")
        public void testObjects() throws Exception {
            runTest("js/js.translator/testData/typescript-export/objectsInExportedFile/objects.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/primitives")
    @TestDataPath("$PROJECT_ROOT")
    public class Primitives {
        @Test
        public void testAllFilesPresentInPrimitives() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/primitives"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("primitives.kt")
        public void testPrimitives() throws Exception {
            runTest("js/js.translator/testData/typescript-export/primitives/primitives.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/primitivesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class PrimitivesInExportedFile {
        @Test
        public void testAllFilesPresentInPrimitivesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/primitivesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("primitives.kt")
        public void testPrimitives() throws Exception {
            runTest("js/js.translator/testData/typescript-export/primitivesInExportedFile/primitives.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/properties")
    @TestDataPath("$PROJECT_ROOT")
    public class Properties {
        @Test
        public void testAllFilesPresentInProperties() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/properties"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("properties.kt")
        public void testProperties() throws Exception {
            runTest("js/js.translator/testData/typescript-export/properties/properties.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/propertiesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class PropertiesInExportedFile {
        @Test
        public void testAllFilesPresentInPropertiesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/propertiesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("properties.kt")
        public void testProperties() throws Exception {
            runTest("js/js.translator/testData/typescript-export/propertiesInExportedFile/properties.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/regular-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Regular_classes {
        @Test
        public void testAllFilesPresentInRegular_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/regular-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("regular-classes.kt")
        public void testRegular_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/regular-classes/regular-classes.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/regular-classesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Regular_classesInExportedFile {
        @Test
        public void testAllFilesPresentInRegular_classesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/regular-classesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("regular-classes.kt")
        public void testRegular_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/regular-classesInExportedFile/regular-classes.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/sealed-classes")
    @TestDataPath("$PROJECT_ROOT")
    public class Sealed_classes {
        @Test
        public void testAllFilesPresentInSealed_classes() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/sealed-classes"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("sealed-classes.kt")
        public void testSealed_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/sealed-classes/sealed-classes.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/sealed-classesInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Sealed_classesInExportedFile {
        @Test
        public void testAllFilesPresentInSealed_classesInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/sealed-classesInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("sealed-classes.kt")
        public void testSealed_classes() throws Exception {
            runTest("js/js.translator/testData/typescript-export/sealed-classesInExportedFile/sealed-classes.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/selective-export")
    @TestDataPath("$PROJECT_ROOT")
    public class Selective_export {
        @Test
        public void testAllFilesPresentInSelective_export() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/selective-export"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("selective-export.kt")
        public void testSelective_export() throws Exception {
            runTest("js/js.translator/testData/typescript-export/selective-export/selective-export.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/selective-exportInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class Selective_exportInExportedFile {
        @Test
        public void testAllFilesPresentInSelective_exportInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/selective-exportInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("selective-export.kt")
        public void testSelective_export() throws Exception {
            runTest("js/js.translator/testData/typescript-export/selective-exportInExportedFile/selective-export.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/strictImplicitExport")
    @TestDataPath("$PROJECT_ROOT")
    public class StrictImplicitExport {
        @Test
        public void testAllFilesPresentInStrictImplicitExport() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/strictImplicitExport"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("declarations.kt")
        public void testDeclarations() throws Exception {
            runTest("js/js.translator/testData/typescript-export/strictImplicitExport/declarations.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/visibility")
    @TestDataPath("$PROJECT_ROOT")
    public class Visibility {
        @Test
        public void testAllFilesPresentInVisibility() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/visibility"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("visibility.kt")
        public void testVisibility() throws Exception {
            runTest("js/js.translator/testData/typescript-export/visibility/visibility.kt");
        }
    }

    @Nested
    @TestMetadata("js/js.translator/testData/typescript-export/visibilityInExportedFile")
    @TestDataPath("$PROJECT_ROOT")
    public class VisibilityInExportedFile {
        @Test
        public void testAllFilesPresentInVisibilityInExportedFile() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/typescript-export/visibilityInExportedFile"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS_IR, true);
        }

        @Test
        @TestMetadata("visibility.kt")
        public void testVisibility() throws Exception {
            runTest("js/js.translator/testData/typescript-export/visibilityInExportedFile/visibility.kt");
        }
    }
}
